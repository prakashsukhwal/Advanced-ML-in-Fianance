{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Activity_Circles_usingGPU","provenance":[{"file_id":"159VHBRLaBZZO70s3P3SC7NCxDynOOs2N","timestamp":1636781540268},{"file_id":"1AX-cQBVtnTE7gG_H-8XHHnKfugNzZiTK","timestamp":1636772241694}],"collapsed_sections":[],"authorship_tag":"ABX9TyPJlmi+Nznvyh814E6Bzfji"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iI1RKNugRqsX","executionInfo":{"status":"ok","timestamp":1636781462713,"user_tz":-480,"elapsed":614,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"bd938a05-58d4-49dd-814d-fca2e9340970"},"source":["## turn on the autocomplete if off by default\n","%config Completer.use_jedi = False"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: UserWarning: Config option `use_jedi` not recognized by `IPCompleter`.\n","  \n"]}]},{"cell_type":"markdown","metadata":{"id":"l5KhKjXY9DnX"},"source":["## Let us try to solve the concentric circle problem in PyTorch using a NN\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"hFfOiv0k9Dvu"},"source":["# import necessary libraries-1 \n","import numpy as np # numpy arrays, matrix operations etc.\n","import pandas as pd # read the datafiles\n","import io # for any input/output operations\n","from sklearn import datasets\n","from sklearn.preprocessing import StandardScaler # normalize your features\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import confusion_matrix, classification_report, accuracy_score\n","import matplotlib.pyplot as plt\n","from tqdm import tqdm, tqdm_notebook\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9rWUtL8B9D3E"},"source":["# import necessary libraries-2\n","import torch # main torch library\n","import torch.nn as nn # all neural network classes and functions\n","import torch.nn.functional as F # all neural network classes and functions (stateless compared to torch.nn)\n","from torch.utils.data import Dataset # use it to create custom pytorch dataset\n","import torch.optim.lr_scheduler as lr_scheduler\n","from torch import optim"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZBsyjESAFQHB"},"source":["# upload iris data interactively to google drive and access the data\n","# from google.colab import files\n","# uploaded = files.upload()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eTiJ6fuvPI-y","executionInfo":{"status":"ok","timestamp":1636781464279,"user_tz":-480,"elapsed":27,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"c1e883d4-3a01-4798-80e2-d9e580c2e2aa"},"source":["X, y = datasets.make_circles(n_samples=1000, random_state=333, noise=0.1, factor=0.05)\n","print(X.shape)\n","print(y.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1000, 2)\n","(1000,)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B4bpso5Krc2z","executionInfo":{"status":"ok","timestamp":1636781464280,"user_tz":-480,"elapsed":24,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"91f4c4e2-277b-4a9a-d791-45a4970f6704"},"source":["type(X)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GlhTK0wsrgcU","executionInfo":{"status":"ok","timestamp":1636781464281,"user_tz":-480,"elapsed":22,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"f89305ce-16eb-471f-a4a4-3229effb2707"},"source":["type(y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i65IyiZpXY7T","executionInfo":{"status":"ok","timestamp":1636781464283,"user_tz":-480,"elapsed":21,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"f22b90ca-0f95-487b-a30e-cfd6a58cb6d5"},"source":["y[:4]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 0])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2qBxWgvNkT4-","executionInfo":{"status":"ok","timestamp":1636781464284,"user_tz":-480,"elapsed":18,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"50e94c5c-6763-4dd0-bc2b-11a739cc3353"},"source":["X[:4]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.14605809, -0.0661383 ],\n","       [ 0.06041204, -0.00742553],\n","       [ 0.01366235,  0.21460192],\n","       [-0.96449   , -0.27265979]])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"Fy0auDaDfOKD"},"source":["# scale = StandardScaler()\n","\n","# X = scale.fit_transform(X)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"g6IsPg8qPJLj"},"source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MRhkixDFPclL","executionInfo":{"status":"ok","timestamp":1636781467385,"user_tz":-480,"elapsed":3115,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"f6365657-de7b-460c-d257-0ea20e63268a"},"source":["x_data = torch.FloatTensor(X).to(device) \n","x_data.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([1000, 2])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nRKAqp-FPJBI","executionInfo":{"status":"ok","timestamp":1636781467387,"user_tz":-480,"elapsed":58,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"62c19166-c724-484f-a63f-b7106fcb0ff5"},"source":["y_data = torch.FloatTensor(y.reshape(1000, 1)).to(device) \n","y_data.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([1000, 1])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"Qp2lH7jrPJDi","executionInfo":{"status":"ok","timestamp":1636781467388,"user_tz":-480,"elapsed":47,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"e8b29e8b-b777-4058-ebdc-689fca1960ee"},"source":["def scatter_plot(x, y):\n","    plt.scatter(x[y==0, 0], x[y==0, 1])\n","    plt.scatter(x[y==1, 0], x[y==1, 1])\n","    plt.title('Non-Linear Dataset')\n","scatter_plot(X, y)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"w36qyc1_PJFZ"},"source":["class Circle(nn.Module):\n","  def __init__(self, input, hidden, output):\n","    super(Circle, self).__init__()# this means it is a subclass of nn.Module & is inheriting all the methods\n","    self.layer1 = nn.Linear(input, hidden)\n","    self.layer2 = nn.Linear(hidden, output)\n","    self.sig = nn.Sigmoid()\n","\n","  def forward(self, x):\n","    out = self.layer1(x)\n","    out = self.sig(out)\n","    out = self.layer2(out)\n","    out = self.sig(out)\n","    return out\n","  \n","  def prediction(self, x): # almost same as above function but we need to max value along columns\n","    out = self.layer1(x)\n","    out = self.sig(out)\n","    out = self.layer2(out)\n","    out = self.sig(out)\n","    # print(out)\n","    if out > 0.5:\n","      out = 1\n","    else:\n","      out = 0\n","    return out"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"f8AEfr3vPJI3"},"source":["model = Circle(2, 6, 1).to(device) \n","lr = 1e-02\n","loss = nn.BCELoss()\n","epochs = 2000\n","opt = optim.Adam(model.parameters(), lr = lr)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V8-HPIPrbM4z","executionInfo":{"status":"ok","timestamp":1636781467389,"user_tz":-480,"elapsed":42,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"00e4517c-0b86-4177-c1f5-7c9ae0a8a0b3"},"source":["print(model)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Circle(\n","  (layer1): Linear(in_features=2, out_features=6, bias=True)\n","  (layer2): Linear(in_features=6, out_features=1, bias=True)\n","  (sig): Sigmoid()\n",")\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d1e8XzXKxK_j","executionInfo":{"status":"ok","timestamp":1636781467389,"user_tz":-480,"elapsed":37,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"218a6fd7-7c03-4b4f-f92b-04b5e31d491c"},"source":["next(model.parameters()).is_cuda"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":626},"id":"8MZF05jqPJNx","executionInfo":{"status":"ok","timestamp":1636781469248,"user_tz":-480,"elapsed":1889,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"e6884d33-e875-4767-d5dc-a36c32398d02"},"source":["# keep track of loss\n","loss_list = []\n","for epoch in range(epochs):\n","    epoch+=1\n","    y_pred = model(x_data)\n","    ls = loss(y_pred, y_data)\n","    loss_list.append(ls)\n","    \n","    # print at every 100th epoch\n","    if epoch%100 == 1:\n","        print(f'epoch: {epoch:2}  loss: {ls.item():10.4f}')\n","\n","    opt.zero_grad()\n","    ls.backward()\n","    opt.step()\n","\n","plt.plot(loss_list, 'r')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["epoch:  1  loss:     0.7622\n","epoch: 101  loss:     0.6826\n","epoch: 201  loss:     0.5205\n","epoch: 301  loss:     0.2744\n","epoch: 401  loss:     0.1377\n","epoch: 501  loss:     0.0715\n","epoch: 601  loss:     0.0440\n","epoch: 701  loss:     0.0304\n","epoch: 801  loss:     0.0226\n","epoch: 901  loss:     0.0176\n","epoch: 1001  loss:     0.0142\n","epoch: 1101  loss:     0.0118\n","epoch: 1201  loss:     0.0100\n","epoch: 1301  loss:     0.0086\n","epoch: 1401  loss:     0.0075\n","epoch: 1501  loss:     0.0066\n","epoch: 1601  loss:     0.0059\n","epoch: 1701  loss:     0.0052\n","epoch: 1801  loss:     0.0047\n","epoch: 1901  loss:     0.0043\n"]},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f226c384d90>]"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"QeutcR-sv1u8"},"source":["### Prediction"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vsGvrMz2PJVJ","executionInfo":{"status":"ok","timestamp":1636781470089,"user_tz":-480,"elapsed":855,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"91deeeea-5b1b-44c6-b399-9efd0f0574a9"},"source":["# pedict\n","model.eval()\n","X, y = datasets.make_circles(n_samples=500, random_state=000, noise=0.1, factor=0.05)\n","x = torch.FloatTensor(X).to(device) \n","y_pred = np.array([model.prediction(i) for i in x])\n","type(y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"rJdaCX0es349"},"source":["y_pred"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"MAuOxbbzPJW1","executionInfo":{"status":"ok","timestamp":1636781470094,"user_tz":-480,"elapsed":36,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"3547afe9-ed16-4e06-95ea-8a545143129d"},"source":["scatter_plot(X, y_pred)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ecO3ygk1uPHG","executionInfo":{"status":"ok","timestamp":1636781470095,"user_tz":-480,"elapsed":34,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"256c85eb-2bed-4f76-83a7-b07ae1a255c3"},"source":["# calculate classification accuracy\n","acc = accuracy_score(y, y_pred)\n","print(acc)\n","\n","cnf_matrix = confusion_matrix(y, y_pred)\n","cnf_matrix"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.0\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[250,   0],\n","       [  0, 250]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PJ1vlJHVPJY4","executionInfo":{"status":"ok","timestamp":1636781470097,"user_tz":-480,"elapsed":27,"user":{"displayName":"Prakaash Sukhwal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghzzt-AFO-3NEhq84ctHbsx-kMXPFGJBKbkyLO4=s64","userId":"00923159090350613901"}},"outputId":"9ae443bb-2952-4355-b6ee-845a0c4a6f83"},"source":["print(classification_report(y, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00       250\n","           1       1.00      1.00      1.00       250\n","\n","    accuracy                           1.00       500\n","   macro avg       1.00      1.00      1.00       500\n","weighted avg       1.00      1.00      1.00       500\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"FlVnYV9jv8HJ"},"source":["## TASK"]},{"cell_type":"markdown","metadata":{"id":"rqEaAIO2h1tB"},"source":["For numerical stability, it is better to use nn.BCEWithLogitsLoss instead of nn.BCELoss. \n","> Task: remove sigmoid from the forward() output, the sigmoid will be computed inside the loss. <br/>\n","> re-run the code with new loss function and see if the model converges"]},{"cell_type":"code","metadata":{"id":"1yWm5O9OPJb6"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ah6jKrbDPJfc"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oFUfBVYEPJho"},"source":[""],"execution_count":null,"outputs":[]}]}